swagger: "2.0"
info:
  title: beego Test API
  description: |
    beego has a very cool tools to autogenerate documents for your API
  version: 1.0.0
  termsOfService: http://beego.me/
  contact:
    email: mailto:astaxie@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
basePath: /v1
paths:
  /car/:
    post:
      tags:
      - car
      operationId: CarController.get car
      parameters:
      - in: body
        name: body
        description: get perticuler car
        required: true
        schema:
          $ref: '#/definitions/dto.GetcarRequest'
      - in: header
        name: Authorization
        description: Bearer YourAccessToken
        required: true
        type: string
      responses:
        "201":
          description: ""
          schema:
            type: string
        "403":
          description: ""
  /car/cars:
    post:
      tags:
      - car
      operationId: CarController.get cars
      parameters:
      - in: body
        name: body
        description: Insert New User
        schema:
          $ref: '#/definitions/dto.PaginationReq'
      - in: header
        name: Authorization
        description: Bearer YourAccessToken
        required: true
        type: string
      responses:
        "201":
          description: ""
          schema:
            type: string
        "403":
          description: ""
  /car/create:
    post:
      tags:
      - car
      operationId: CarController.new car
      parameters:
      - in: formData
        name: car_name
        description: Car name
        required: true
        type: string
      - in: formData
        name: modified_by
        description: modified by
        required: true
        type: string
      - in: formData
        name: model
        description: Car Model
        required: true
        type: string
      - in: formData
        name: type
        description: accepted type 'sedan','SUV','hatchback'
        required: true
        type: string
      - in: formData
        name: file
        description: File to be uploaded, Acepted Extension [jpeg, jpg, png, svg]
        required: true
        type: file
      - in: header
        name: Authorization
        description: Bearer YourAccessToken
        required: true
        type: string
      responses:
        "201":
          description: ""
          schema:
            type: string
        "403":
          description: ""
  /car/delete:
    delete:
      tags:
      - car
      operationId: CarController.remove car
      parameters:
      - in: body
        name: body
        description: delete car
        required: true
        schema:
          $ref: '#/definitions/dto.GetcarRequest'
      - in: header
        name: Authorization
        description: Bearer YourAccessToken
        required: true
        type: string
      responses:
        "201":
          description: ""
          schema:
            type: string
        "403":
          description: ""
  /car/search_car:
    post:
      tags:
      - car
      description: |-
        Fetch Filter car
        <br>
      operationId: CarController.Filter car
      parameters:
      - in: formData
        name: search
        description: Search car
        required: true
        type: string
      - in: formData
        name: open_page
        description: if you want to open specific page than give page number
        type: integer
        format: int64
      - in: formData
        name: page_size
        description: how much data you want to show at a time default it will give
          10 records
        type: integer
        format: int64
      - in: header
        name: Authorization
        description: Bearer YourAccessToken
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/object'
        "403":
          description: ""
  /car/update:
    put:
      tags:
      - car
      operationId: CarController.update car
      parameters:
      - in: formData
        name: car_id
        description: Car name
        required: true
        type: string
      - in: formData
        name: car_name
        description: Car name
        type: string
      - in: formData
        name: modified_by
        description: modified by
        type: string
      - in: formData
        name: model
        description: Car Model
        type: string
      - in: formData
        name: type
        description: accepted type 'sedan','SUV','hatchback'
        type: string
      - in: formData
        name: file
        description: File to be uploaded, Acepted Extension [jpeg, jpg, png, svg]
        type: file
      - in: header
        name: Authorization
        description: Bearer YourAccessToken
        required: true
        type: string
      responses:
        "201":
          description: ""
          schema:
            type: string
        "403":
          description: ""
  /country/filter_city:
    post:
      tags:
      - country
      description: |-
        it give city_names and country_id
        <br>
      operationId: CountryController.Filter Cities
      parameters:
      - in: formData
        name: open_page
        description: if you want to open specific page than give page number
        type: integer
        format: int64
      - in: formData
        name: page_size
        description: how much data you want to show at a time default it will give
          10 records
        type: integer
        format: int64
      - in: formData
        name: state_id
        description: state_id if you provide country_id than use it
        type: integer
        format: int64
      - in: formData
        name: country_id
        description: country_id if you provide state_id than use it
        type: integer
        format: int64
      - in: formData
        name: country_name
        description: if you provide proper country name than it returns all cities
          of that country
        type: string
      - in: formData
        name: state_name
        description: if you provide proper state  name than it returns all cities
          of that states
        type: string
      - in: formData
        name: search_param
        description: it filter in database and give match
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/object'
        "403":
          description: ""
  /country/filter_country:
    post:
      tags:
      - country
      description: |-
        it give country_name and country_id
        <br>
      operationId: CountryController.Filter Countries
      parameters:
      - in: formData
        name: open_page
        description: if you want to open specific page than give page number
        type: integer
        format: int64
      - in: formData
        name: page_size
        description: how much data you want to show at a time default it will give
          10 records
        type: integer
        format: int64
      - in: formData
        name: search_param
        description: it filter in database and give match
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/object'
        "403":
          description: ""
  /country/get_country:
    post:
      tags:
      - country
      operationId: CountryController.get country
      parameters:
      - in: formData
        name: country_id
        description: get perticuler states using country_id
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: ""
          schema:
            type: string
        "403":
          description: ""
  /country/list_countries:
    post:
      tags:
      - country
      description: |-
        In this function after login user  can Fetch Data Country
        <br>
      operationId: CountryController.After Login User Can Fetch Data Country
      parameters:
      - in: formData
        name: open_page
        description: if you want to open specific page than give page number
        type: integer
        format: int64
      - in: formData
        name: page_size
        description: how much data you want to show at a time default it will give
          10 records
        type: integer
        format: int64
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/object'
        "403":
          description: ""
  /country/search_country:
    post:
      tags:
      - country
      description: |-
        Fetch Data Country
        <br>
      operationId: CountryController.Fetch Data Country
      parameters:
      - in: formData
        name: search
        description: Search Country
        required: true
        type: string
      - in: formData
        name: open_page
        description: if you want to open specific page than give page number
        type: integer
        format: int64
      - in: formData
        name: page_size
        description: how much data you want to show at a time default it will give
          10 records
        type: integer
        format: int64
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/object'
        "403":
          description: ""
  /homepage/delete_settings:
    post:
      tags:
      - homepage
      description: |-
        delete Setting From Database by setting_id
        <br>
      operationId: HomeSettingController.DeleteSetting
      parameters:
      - in: formData
        name: setting_id
        description: User can delete setting after login by setting_id
        required: true
        type: integer
        format: int64
      - in: query
        name: lang
        description: use en-US or hi-IN
        type: string
      - in: header
        name: Authorization
        description: Bearer YourAccessToken
        required: true
        type: string
      - in: query
        name: lang
        description: use en-US or hi-IN
        type: string
      responses:
        "200":
          description: '{string} string'
        "403":
          description: ""
  /homepage/export:
    post:
      tags:
      - homepage
      description: |-
        In this function after login user  can Export File in Home page settings
        <br>
      operationId: HomeSettingController.After Login User Can Export File in Home
        Page settings
      parameters:
      - in: formData
        name: file_type
        description: Here only select file within [XLSX,CSV,PDF]
        required: true
        type: string
      - in: formData
        name: starting_from
        description: you want data from row first or id 1 to 20 so you can pass starting_from
          as 1
        required: true
        type: integer
        format: int64
      - in: formData
        name: limit
        description: How Much you want to export data Ex.10
        required: true
        type: integer
        format: int64
      - in: header
        name: Authorization
        description: Bearer YourAccessToken
        required: true
        type: string
      - in: query
        name: lang
        description: use en-US or hi-IN
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.HomePagesSettingTable'
        "403":
          description: ""
  /homepage/fetch_settings:
    post:
      tags:
      - homepage
      description: |-
        In this function after login user  can Fetch Data Home page settings
        <br>
      operationId: HomeSettingController.After Login User Can Fetch Data Home Page
        settings
      parameters:
      - in: formData
        name: open_page
        description: if you want to open specific page than give page number
        type: integer
        format: int64
      - in: formData
        name: page_size
        description: how much data you want to show at a time default it will give
          10 records
        type: integer
        format: int64
      - in: header
        name: Authorization
        description: Bearer YourAccessToken
        required: true
        type: string
      - in: query
        name: lang
        description: use en-US or hi-IN
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.HomePagesSettingTable'
        "403":
          description: ""
  /homepage/filter_hpst:
    post:
      tags:
      - homepage
      description: |-
        In this function after login user  can FilterData with pagination and Check Count Of Match Data from  Home page settings
        <br>
      operationId: HomeSettingController.After Login User Can Filter Data Home Page
        settings
      parameters:
      - in: formData
        name: open_page
        description: if you want to open specific page than give page number
        type: integer
        format: int64
      - in: formData
        name: page_size
        description: how much data you want to show at a time default it will give
          10 records
        type: integer
        format: int64
      - in: formData
        name: setting_data
        description: it filter in database and give match
        type: string
      - in: formData
        name: data_type
        description: it filter in database and give match
        type: string
      - in: formData
        name: unique_code
        description: it filter in database and give match
        type: string
      - in: formData
        name: section
        description: it filter in database and give match
        type: string
      - in: formData
        name: apply_position
        description: if you apply_position pass start than it will match record with
          starting of a string or if you  apply_position not pass it will search in
          perticular/allcolumns  all string
        type: string
      - in: header
        name: Authorization
        description: Bearer YourAccessToken
        required: true
        type: string
      - in: query
        name: lang
        description: use en-US or hi-IN
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.HomePagesSettingTable'
        "403":
          description: ""
  /homepage/import:
    post:
      tags:
      - homepage
      description: |-
        In this function after login user  can Import File in Home page settings
        <br>
      operationId: HomeSettingController.After Login User Can Import File in Home
        Page settings
      parameters:
      - in: formData
        name: import_type
        description: Here only select file within [XLSX,CSV]
        required: true
        type: file
      - in: header
        name: Authorization
        description: Bearer YourAccessToken
        required: true
        type: string
      - in: query
        name: lang
        description: use en-US or hi-IN
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.HomePagesSettingTable'
        "403":
          description: ""
  /homepage/register_settings:
    post:
      tags:
      - homepage
      description: |-
        In this function after login can register Home page settings
        <br>
      operationId: HomeSettingController.After Login User Can Register Home Page settings
      parameters:
      - in: formData
        name: setting_data_file
        description: body for file
        type: file
      - in: formData
        name: setting_data
        description: body for string
        type: string
      - in: formData
        name: data_type
        description: body for html text or other
        type: string
      - in: formData
        name: section
        description: body for file
        type: string
      - in: header
        name: Authorization
        description: Bearer YourAccessToken
        required: true
        type: string
      - in: query
        name: lang
        description: use en-US or hi-IN
        type: string
      responses:
        "201":
          description: ""
          schema:
            $ref: '#/definitions/models.HomePagesSettingTable'
        "403":
          description: ""
  /homepage/update_settings:
    post:
      tags:
      - homepage
      description: |-
        In this function after login user  can update Home page settings
        <br>
      operationId: HomeSettingController.After Login User Can Update Home Page settings
      parameters:
      - in: formData
        name: setting_data_file
        description: body for file if you want to update file you only select file
          .don't pass setting_data
        type: file
      - in: formData
        name: data_type
        description: body for data type
        type: string
      - in: formData
        name: setting_data
        description: body for setting_data if you want to update setting_data than
          don't pass file
        type: string
      - in: formData
        name: section
        description: body for section
        type: string
      - in: formData
        name: setting_id
        description: body for setting_id
        type: integer
        format: int64
      - in: header
        name: Authorization
        description: Bearer YourAccessToken
        required: true
        type: string
      - in: query
        name: lang
        description: use en-US or hi-IN
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.HomePagesSettingTable'
        "403":
          description: ""
  /language_lable/create_lang_lable:
    post:
      tags:
      - language_lable
      description: |-
        In this function after login it will work
        <br>
      operationId: LangLableController.After Login admin Can create language lable
      parameters:
      - in: formData
        name: lable_code
        description: lable code
        required: true
        type: string
      - in: formData
        name: section
        description: section like success or failed or errors
        required: true
        type: string
      - in: formData
        name: ENGlang_value
        description: here you pass original message value in english
        required: true
        type: string
      - in: formData
        name: lang_ini_code
        description: to use  for hindi [hi-IN],for gujarati [gu-IN]
        required: true
        type: string
      - in: formData
        name: otherlang_value
        description: here you can pass ENGlanguage message  converted otherlanguage
          value
        required: true
        type: string
      - in: header
        name: Authorization
        description: Bearer YourAccessToken
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/object'
        "403":
          description: ""
  /language_lable/import_language_lables:
    post:
      tags:
      - language_lable
      description: |-
        after login it will work
        <br>
      operationId: LangLableController.After Login admin Can import English language
        lable
      parameters:
      - in: formData
        name: lables_ini_file
        description: select language lables ini file for import
        required: true
        type: file
      - in: header
        name: Authorization
        description: Bearer YourAccessToken
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/object'
        "403":
          description: ""
  /language_lable/lang_lable_Insert:
    post:
      tags:
      - language_lable
      description: |-
        new langouge code
        <br>
      operationId: LangLableController.Insert language lable
      parameters:
      - in: formData
        name: lable_code
        description: lable code
        required: true
        type: string
      - in: formData
        name: section
        description: section like success or failed or errors
        required: true
        type: string
      - in: formData
        name: ENGlang_value
        description: here you pass original message value in english
        required: true
        type: string
      - in: header
        name: Authorization
        description: Bearer YourAccessToken
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/object'
        "403":
          description: ""
  /language_lable/lang_lable_UpdateAPI:
    post:
      tags:
      - language_lable
      description: |-
        update lables
        <br>
      operationId: LangLableController.update language lable
      parameters:
      - in: formData
        name: lable_code
        description: lable code
        required: true
        type: string
      - in: formData
        name: section
        description: section like success or failed or errors
        required: true
        type: string
      - in: formData
        name: ENGlang_value
        description: here you pass original message value in english
        required: true
        type: string
      - in: header
        name: Authorization
        description: Bearer YourAccessToken
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/object'
        "403":
          description: ""
  /language_lable/update_lang_lable:
    post:
      tags:
      - language_lable
      description: |-
        function after login it will work
        <br>
      operationId: LangLableController.After Login admin Can update language lable
      parameters:
      - in: formData
        name: lable_code
        description: lable code
        required: true
        type: string
      - in: formData
        name: ENGlang_value
        description: here you pass original message value in english
        required: true
        type: string
      - in: formData
        name: lang_ini_code
        description: to use  for hindi [hi-IN],for gujarati [gu-IN]
        required: true
        type: string
      - in: formData
        name: otherlang_value
        description: here you can pass ENGlanguage message  converted otherlanguage
          value
        required: true
        type: string
      - in: header
        name: Authorization
        description: Bearer YourAccessToken
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/object'
        "403":
          description: ""
  /state/country_wise_state:
    post:
      tags:
      - state
      description: |-
        Country wise states
        <br>
      operationId: StateController.Country wise states
      parameters:
      - in: formData
        name: country_id
        description: Enter Country Id To Search State
        required: true
        type: integer
        format: int64
      - in: formData
        name: open_page
        description: if you want to open specific page than give page number
        type: integer
        format: int64
      - in: formData
        name: page_size
        description: how much data you want to show at a time default it will give
          10 records
        type: integer
        format: int64
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/object'
        "403":
          description: ""
  /state/get_state:
    post:
      tags:
      - state
      operationId: StateController.get car
      parameters:
      - in: formData
        name: state_id
        description: get perticuler states using state_id
        required: true
        type: integer
        format: int64
      responses:
        "201":
          description: ""
          schema:
            type: string
        "403":
          description: ""
  /state/list_states:
    post:
      tags:
      - state
      description: |-
        Fetch Data Country
        <br>
      operationId: StateController.Fetch Data Country
      parameters:
      - in: formData
        name: open_page
        description: if you want to open specific page than give page number
        type: integer
        format: int64
      - in: formData
        name: page_size
        description: how much data you want to show at a time default it will give
          10 records
        type: integer
        format: int64
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/object'
        "403":
          description: ""
  /state/search_state:
    post:
      tags:
      - state
      description: |-
        Fetch Filter States
        <br>
      operationId: StateController.Filter states
      parameters:
      - in: formData
        name: search
        description: Search State
        required: true
        type: string
      - in: formData
        name: open_page
        description: if you want to open specific page than give page number
        type: integer
        format: int64
      - in: formData
        name: page_size
        description: how much data you want to show at a time default it will give
          10 records
        type: integer
        format: int64
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/object'
        "403":
          description: ""
  /user/login:
    post:
      tags:
      - user
      operationId: UserController.login User
      parameters:
      - in: body
        name: body
        description: login User
        required: true
        schema:
          $ref: '#/definitions/dto.UserLoginRequest'
      - in: query
        name: lang
        description: use en-US or hi-IN
        type: string
      - in: header
        name: Accept-Languages
        description: Bearer YourAccessToken
        type: string
      responses:
        "201":
          description: ""
          schema:
            $ref: '#/definitions/object'
        "403":
          description: ""
  /user/register:
    post:
      tags:
      - user
      operationId: UserController.Insert New User
      parameters:
      - in: query
        name: lang
        description: use en-US or hi-IN
        type: string
      - in: body
        name: body
        description: Insert New User
        required: true
        schema:
          $ref: '#/definitions/dto.NewUserRequest'
      responses:
        "201":
          description: ""
          schema:
            $ref: '#/definitions/models.Users'
        "403":
          description: ""
  /user/secure/delete/{id}:
    delete:
      tags:
      - user
      description: |-
        delete user
        <br>
      operationId: UserController.delete user
      parameters:
      - in: path
        name: id
        description: user id to delete recode
        required: true
        type: integer
        format: int64
      - in: query
        name: lang
        description: use en-US or hi-IN
        type: string
      - in: header
        name: Authorization
        description: Bearer YourAccessToken
        required: true
        type: string
      responses:
        "200":
          description: '{string} string'
        "403":
          description: ""
  /user/secure/forgot_pass:
    post:
      tags:
      - user
      operationId: UserController.forgot password
      parameters:
      - in: body
        name: body
        description: forgot password this is send otp on mobile and email
        required: true
        schema:
          $ref: '#/definitions/dto.SendOtpData'
      - in: query
        name: lang
        description: use en-US or hi-IN
        type: string
      responses:
        "201":
          description: ""
          schema:
            type: string
        "403":
          description: ""
  /user/secure/reset_pass:
    post:
      tags:
      - user
      operationId: UserController.Reset password
      parameters:
      - in: body
        name: body
        description: reset password
        required: true
        schema:
          $ref: '#/definitions/dto.ResetUserPassword'
      - in: query
        name: lang
        description: use en-US or hi-IN
        type: string
      - in: header
        name: Authorization
        description: Bearer YourAccessToken
        required: true
        type: string
      responses:
        "201":
          description: ""
          schema:
            $ref: '#/definitions/models.Users'
        "403":
          description: ""
  /user/secure/reset_pass_otp:
    post:
      tags:
      - user
      operationId: UserController.verify otp
      parameters:
      - in: body
        name: body
        description: otp verification for forgot password
        required: true
        schema:
          $ref: '#/definitions/dto.ResetUserPasswordOtp'
      - in: query
        name: lang
        description: use en-US or hi-IN
        type: string
      responses:
        "201":
          description: ""
          schema:
            type: string
        "403":
          description: ""
  /user/secure/search:
    post:
      tags:
      - user
      operationId: UserController.Search User
      parameters:
      - in: formData
        name: search
        description: enter search
        required: true
        schema:
          $ref: '#/definitions/strings'
      - in: formData
        name: open_page
        description: if you want to open specific page than give page number
        type: integer
        format: int64
      - in: formData
        name: page_size
        description: how much data you want to show at a time default it will give
          10 records
        type: integer
        format: int64
      - in: query
        name: lang
        description: use en-US or hi-IN
        type: string
      - in: header
        name: Authorization
        description: Bearer YourAccessToken
        required: true
        type: string
      responses:
        "201":
          description: ""
          schema:
            type: string
        "403":
          description: ""
  /user/secure/update:
    put:
      tags:
      - user
      operationId: UserController.update User
      parameters:
      - in: body
        name: body
        description: update New User
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateUserRequest'
      - in: query
        name: lang
        description: use en-US or hi-IN
        type: string
      - in: header
        name: Authorization
        description: Bearer YourAccessToken
        required: true
        type: string
      responses:
        "201":
          description: ""
          schema:
            $ref: '#/definitions/models.Users'
        "403":
          description: ""
  /user/secure/users/:
    post:
      tags:
      - user
      description: |-
        get Users
        <br>
      operationId: UserController.Get All
      parameters:
      - in: query
        name: lang
        description: use en-US or hi-IN
        type: string
      - in: body
        name: body
        description: Insert New User
        schema:
          $ref: '#/definitions/dto.PaginationReq'
      - in: header
        name: Authorization
        description: Bearer YourAccessToken
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Users'
        "403":
          description: ""
  /user/secure/verify_email_otp:
    post:
      tags:
      - user
      operationId: UserController.verify otp for email
      parameters:
      - in: body
        name: body
        description: otp verification for email
        required: true
        schema:
          $ref: '#/definitions/dto.VerifyEmailOTPRequest'
      - in: query
        name: lang
        description: use en-US or hi-IN
        type: string
      - in: header
        name: Authorization
        description: Bearer YourAccessToken
        required: true
        type: string
      responses:
        "201":
          description: ""
          schema:
            type: string
        "403":
          description: ""
definitions:
  dto.GetcarRequest:
    title: GetcarRequest
    type: object
    properties:
      car_id:
        type: integer
        format: int32
  dto.NewUserRequest:
    title: NewUserRequest
    type: object
    properties:
      country_id:
        type: integer
        format: int64
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
      phone_number:
        type: string
      role:
        type: string
  dto.PaginationReq:
    title: PaginationReq
    type: object
    properties:
      open_page:
        type: integer
        format: int64
      page_size:
        type: integer
        format: int64
  dto.ResetUserPassword:
    title: ResetUserPassword
    type: object
    properties:
      confirm_password:
        type: string
      current_password:
        type: string
      new_password:
        type: string
  dto.ResetUserPasswordOtp:
    title: ResetUserPasswordOtp
    type: object
    properties:
      new_password:
        type: string
      otp:
        type: string
      username:
        type: string
  dto.SendOtpData:
    title: SendOtpData
    type: object
    properties:
      username:
        type: string
  dto.UpdateUserRequest:
    title: UpdateUserRequest
    type: object
    properties:
      country_id:
        type: integer
        format: int64
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      phone_number:
        type: string
      role:
        type: string
      user_id:
        type: integer
        format: int64
  dto.UserLoginRequest:
    title: UserLoginRequest
    type: object
    properties:
      password:
        type: string
      username:
        type: string
  dto.VerifyEmailOTPRequest:
    title: VerifyEmailOTPRequest
    type: object
    properties:
      otp:
        type: string
      username:
        type: string
  models.HomePagesSettingTable:
    title: HomePagesSettingTable
    type: object
    properties:
      CreatedBy:
        type: integer
        format: int64
      CreatedDate:
        type: string
        format: datetime
      DataType:
        type: string
      PageSettingId:
        type: integer
        format: int64
      Section:
        type: string
      SettingData:
        type: string
      UniqueCode:
        type: string
      UpdatedBy:
        type: integer
        format: int64
      UpdatedDate:
        type: string
        format: datetime
  models.Users:
    title: Users
    type: object
    properties:
      CountryId:
        type: integer
        format: int64
      CreatedDate:
        type: string
        format: datetime
      Email:
        type: string
      FirstName:
        type: string
      Isverified:
        type: integer
        format: int64
      LastName:
        type: string
      OtpCode:
        type: string
      Password:
        type: string
      PhoneNumber:
        type: string
      Role:
        type: string
      UpdatedDate:
        type: string
        format: datetime
      UserId:
        type: integer
        format: int64
  object:
    title: object
    type: object
  strings:
    title: strings
    type: object
